<%
// 版本，SEO，标签，等等
function hm(params, data) {
}

const patternT0 = {
	$1: {
		color: 'info',
		align: 'center',
		px: 5,
		mb: 3,
		pt: 3,
		pb: 3,
		bold: true
	},

	$: {
		className: 'text-info text-center px-5 mb-3 pt-3 pb-3 font-weight-bold',
	},
	"b": {
		className: 'text-success text-center px-5 mb-3 pt-3 pb-3 font-weight-bold border-bottom border-muted',
	},
	"c": {
		className: 'text-danger text-center px-5 mb-3 pt-3 pb-3 font-weight-bold border-bottom border-muted',
	},
};
function t0(params, data) {
	if (!data) return;
	let {className} = patternT0[params[0]] || patternT0.$;
%>
	<h3 class="<%=className%>">
    	<%-esc(data)%>
	</h3>
<%
}

const patternT1 = {
	$: {
		className: 'text-info text-left mt-3 mb-4 pt-3 pb-2 font-weight-bold',
	},
	"b": {
		className: 'text-success text-left mt-3 mb-4 pt-3 pb-2',
	},
	"c": {
		className: 'text-danger text-left mt-3 mb-4 pt-3 pb-2 font-weight-bold',
	},
};
function t1(params, data) {
	if (!data) return;
	let {className} = patternT1[params[0]] || patternT1.$;
%>
	<h4 class="<%=className%>">
    	<%-esc(data)%>
	</h4>
<%
}

const patternT2 = {
	$: {
		className: 'text-info text-left mt-3 mb-4 pt-3 pb-2 font-weight-bold'
	},
	"b": {
		className: 'text-success text-left mt-3 mb-4 pt-3 pb-2 font-weight-bold'
	},
	"c": {
		className: 'text-danger text-left mt-3 mb-4 pt-3 pb-2 font-weight-bold'
	},
};
function t2(params, data) {
	if (!data) return;
	let {className} = patternT2[params] || patternT2.$;
%>
	<h5 class="<%=className%>"  style="vertical-align: middle;">
		<small><small class="text-dark "><i class="fa fa-square"></i></small></small>&ensp;
		<span style="vertical-align: middle;"><%-esc(data)%></span>
	</h5>
<%
}

const patternT3 = {
	$: {
		className: 'text-info text-left mt-3 mb-4 pt-3 pb-2 font-weight-bold'
	},
	"b": {
		className: 'text-success text-left mt-3 mb-4 pt-3 pb-2 font-weight-bold'
	},
	"c": {
		className: 'text-danger text-left mt-3 mb-4 pt-3 pb-2 font-weight-bold'
	},
};
function t3(params, data) {
	let {className} = patternT3[params[0]] || patternT3.$;
%>
	<h6 class="<%=className%>
    	<%-esc(data)%>
	</h6>
<%
}

const patternV = {
}
function v(params, data) {
	state.cont=2;
%>
	<div class="my-3 "><a class="btn btn-<%=params.join(' ')%>" data-toggle="collapse" 
		href="#sec-<%=state.secId+1%>" role="button" aria-expanded="false" aria-controls="jk">
    	<%-esc(data)%>
	</a></div>
<%
}

const patternGrid = {
	$: {
		gridClass: 'row row-cols-1 row-cols-sm-1 row-cols-md-3',
	},
	b: {
		gridClass: 'row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4',
	},
	c: {
		gridClass: 'row row-cols-1 row-cols-md-2',
	}
}
function cell(params, data, arr) {
%>
	<div class="border p-3">
<%
	data.forEach (v => {
%>
		<div><%-esc(v)%></div>
<%
	})
	if (arr) {
%>
		<div><%-esc(arr)%></div>
<%		
	}
%>	
	</div>
<%
}
function grid(params, data) {
	let cellFunc = params[0];
	let {gridClass} = patternGrid[params[1]] || patternGrid.$;
%> <div class="container <%=collapse()%> my-3" id="sec-<%=state.secId%>">
	<div class="<%=gridClass%>">
<%
	let tf = eval('typeof ' + cellFunc);
	let func = (tf === 'function')? eval(cellFunc) : cell;
	data.forEach(v => {
		let main, arr;
		let v0 = v[0];
		if (Array.isArray(v0)) {
			main = v0;
			arr = v[1];
		}
		else {
			main = v;
		}
		if (arr === undefined) arr = [];
		func(params, main, arr)
	});
%> </div></div> <%
}

const patternTable = {
	$: {
		tableClass: 'table table-striped table-hover border-top my-3 table-bordered',
	}
}
function table(params, data) {
	//let {tableClass} = patternTable[params[0]] || patternTable.$;
	if (params.length === 0)
		tableClass = 'table table-striped table-hover border-top my-3 table-bordered';
	else
		tableClass = params.join(' ');
	let len=data.length;
	if (len===0) return;
	let align = [];
%>
	<table class="<%=tableClass%> <%=collapse()%> ">
	<thead><tr>
<%
	let r0 = data[0];
	for (let j=0; j<r0.length; j++) {
		let c = r0[j];
		let a;
		if (c.endsWith('|') === true) {
			a = 'text-right';
			c = c.substr(0, c.length-1);
		}
		else if (c.startsWith('|') === true) {
			c = c.substr(1);
		}
		else {
			a = 'text-center';
		}
		align.push(a);
		%> <th class="<%=a%>""><%-esc(c)%></th> <%
	};
%> 
	</tr></thead>
	<tbody>
<%
	for (let i=1; i<len; i++) {
		let r = data[i];
		%> <tr> <%
		for (let j=0; j<r.length; j++) {
			let c = r[j];
			%> <td class="<%=align[j]%>"><%-esc(c)%></td> <%
		}
		%> </tr> <%
	}
%>
	</tbody></table>
<%
}


function xl(ou, pattern, params, data, type) {
	if (!data || data.length === 0) return;
	let {className} = pattern[params] || pattern.$;
%>
	<<%=ou%> type="<%=type%>" class="<%=className%> <%=collapse()%> ">
<%
		data.forEach(v => {
%>
			<li><%-esc(v)%></li>
<%			
		})
%>
	</<%=ou%>>
<%
}
const patternUl = {
	$: {
		className: ""
	}
}
function ul(params, data) {
	xl('ul', patternUl, params, data);
}

const patternOl = {
	$: {
		className: ""
	},
	b: {
		className: "text-muted small font-italic"
	}
}
function ol(params, data) {
	xl('ol', patternOl, params, data);
}

function ouou(l1, l2, params, data, type1, type2) {
	if (!data || data.length === 0) return;
%>
	<<%=l1%> type="<%=type1%>">
<%
		data.forEach(v => {
%>
			<li>
				<%- esc(v[0]) %>
				<% xl(l2, type1==='ol'?patternOl:patternUl, params, v[1], type2) %>
			</li>
<%			
		})
%>
	</<%=l1%>>
<%
}

function ulul(params, data) {
	ouou('ul', 'ul', params, data, 'square', 'circle');
}

function ulol(params, data) {
	ouou('ul', 'ol', params, data);
}

function olul(params, data) {
	ouou('ol', 'ul', params, data);
}

function olol(params, data) {
	ouou('ol', 'ol', params, data, '', 'a');
}

function hr(params) {
	switch (params[0]) {
	default:
%>
	<hr class="">
<%
		break;
	case 'down':
%>
	<div class="d-flex mx-auto justify-content-center align-items-center my-5">
	<div class="w-25 border-bottom border-info"></div>
	<img class="w-3c mx-3" src="<%=params[1] || $root + 'img/double-down.png'%>" style="opacity: 0.7;">
	<div class="w-25 border-bottom border-info"">
	</div></div>
<%
		break;
	}
}

const patternP = {
	$: {
		first: 'first-char-large first-line-height-small',
		other: ''
	},
	b: {
		first: 'first-char-large first-line-height-small',
		other: 'first-char-large first-line-height-small'
	},
	c: {
		first: '',
		other: ''
	}
}
function p(params, data) {
	let {first, other} = patternP[params[0]] || patternP.$;
	switch (typeof data) {
		case 'string':
%>
			<p class="<%=first%> <%=collapse()%> "><%-esc(v)%></p>
<%
			return;
		case 'undefined':
			return;
		default:
			let line0 = true;
			data.forEach(v => {
%>
				<p class="<%=line0===true?first:other%> <%=collapse()%> "><%-esc(v)%></p>
<%
				line0 = false;
			});
			return;
	}
}

function raw(params, data) {
%>	
	<%-esc(data)%>
<%
}


const patternImage = {
	$: {
		w_def: 'w-75',
		p_def: 'p-3',
		m_def: 'my-3',
		divClass: 'text-center mx-auto',
		imgClass: 'w-100 mb-2',
		textClass: 'small text-muted',
	},
	"float-right": {
		w_def: 'w-100 w-sm-50',
		p_def: 'p-3',
		m_def: 'my-3 ml-3',
		divClass: 'text-center float-right',
		imgClass: 'w-100 mb-2',
		textClass: 'small text-muted',
	},
	"float-left": {
		w_def: 'w-100 w-sm-50',
		p_def: 'p-3',
		m_def: 'my-3 mr-3',
		divClass: 'text-center float-left',
		imgClass: 'w-100 mb-2',
		textClass: 'small text-muted',
	}
}
function image(params, data) {
	let {divClass, textClass, imgClass, w_def, p_def, m_def} = patternImage[params[0]] || patternImage.$;
	let w = false, p = false, m = false;
	for (let i=0; i<params.length; i++) {
		let c = params[i];
		switch (c) {
			default:
				if (c.startsWith('border') === true) {
					imgClass += ' ' + c;
				}
				if (c.startsWith('w-') === true) {
					divClass += ' ' + c;
					w = true;
				}
				if (c.charAt(0) === 'p') {
					if (c.charAt(1) === '-' || c.charAt(2) === '-') {
						imgClass += ' ' + c;
						p = true;
					}
				}
				if (c.charAt(0) === 'm') {
					if (c.charAt(1) === '-' || c.charAt(2) === '-') {
						divClass += ' ' + c;
						m = true;
					}
				}
				break;
		}
	}
	if (w === false) divClass += ' ' + w_def;
	if (p === false) imgClass += ' ' + p_def;
	if (m === false) divClass += ' ' + m_def;

	let [l0, l1, l2] = data;
	let v0 = Array.isArray(l0)===true? l0[0] : l0;
	let v1 = Array.isArray(l1)===true? l1[0] : l1;
	let v2 = Array.isArray(l2)===true? l2[0] : l2;
%>
	<div class="<%=divClass%> <%=collapse()%> ">
	<% if (v2) { %>
		<a href="<%=v2%>">
	<% } %>
		<img class="<%=imgClass%>" src="<%=v0%>" alt="">
		<div class="<%=textClass%>"><%-esc(v1)%></div>
	<% if (v2) { %>
		</a>
	<% } %>
	</div>
<%
}

function box(params, data) {
%>
	<div class="<%=params.join(' ')%>">
<%
}

function boxEnd(params, data) {
%>
	</div><%-esc(data)%>
<%
}
%>
